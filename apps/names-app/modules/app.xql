xquery version "3.0";

module namespace app="http://io.wulfman/apps/names/templates";

import module namespace templates="http://exist-db.org/xquery/templates" ;
import module namespace config="http://io.wulfman/apps/names/config" at "config.xqm";
import module namespace xqjson="http://xqilla.sourceforge.net/lib/xqjson";
declare namespace httpclient="http://exist-db.org/xquery/httpclient";

(:~
 : This is a sample templating function. It will be called by the templating module if
 : it encounters an HTML element with an attribute data-template="app:test" 
 : or class="app:test" (deprecated). The function has to take at least 2 default
 : parameters. Additional parameters will be mapped to matching request or session parameters.
 : 
 : @param $node the HTML node with the attribute which triggered this call
 : @param $model a map containing arbitrary data - used to pass information between template calls
 :)
declare function app:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function app:test at {current-dateTime()}. The templating
        function was triggered by the class attribute <code>class="app:test"</code>.</p>
};

declare function app:viaf-lookup($qstring as xs:string) as element() {
    
    let $query := "http://www.viaf.org/viaf/AutoSuggest?query=Tzara"
    let $response := httpclient:get(xs:anyURI($query), true(), <Headers/>)
    return xqjson:parse-json(util:base64-decode($response))};
